from datetime import datetime, timedelta

class PostFactory:
    def __init__(self, evento, link_inscricao, local, data, hora, hashtags, caminho_output):
        self.EVENTO = evento
        self.LINK_INSCRICAO = link_inscricao
        self.LOCAL = local
        self.DATA = data
        self.HORA = hora
        self.HASHTAGS = hashtags
        self.CAMINHO_OUTPUT = caminho_output
        self.texto = ""

    def comHashtags(self):
        self.texto += self.HASHTAGS + "\n"
        return self

    def comDivisorInicio(self):
        self.texto = f"{'=*'*25}\n{self.texto}"
        return self

    def comDivisorFim(self):
        self.texto += f"{'=*'*25}\n\n"
        return self

    def comDivisorIntermediario(self):
        self.texto += f"{'='*50}\n"
        return self

    def comTituloOrganizacao(self, titulo):
        self.texto += f"Titulo da postagem: {titulo}\n"
        return self
    

    def comTexto(self, texto):
        self.texto += f"{texto}\n\n"
        return self

    def comLocal(self):
        self.texto += f"üìç Local: {self.LOCAL}\n\n"
        return self

    def comDataHora(self):
        self.texto += f"üìÖ {self.DATA} - {self.HORA}\n\n"
        return self

    def comLinkInscricao(self):
        self.texto += f"üîó Inscri√ß√µes: {self.LINK_INSCRICAO}\n\n"
        return self

    def comCabecalhoOrganizacao(self, titulo):
        return (self
                .comDivisorInicio()
                .comTituloOrganizacao(titulo)
                .comDivisorIntermediario()
                )
    
    def comFinalizacao(self):
        return (self
                .comHashtags()
                .comDivisorFim()
                )

    def comInscricaoELocal(self):
        return (self
                .comLinkInscricao()
                .comDataHora()
                .comLocal()
                )
    
    def mostrar(self):
        print(self.texto)

    def salvar(self):
        with open(self.CAMINHO_OUTPUT, 'a') as f:
            f.write(self.texto)
        self.texto = ""
    
    def gerar(self):
        return self.texto
    
    def deFaltamDias(self, diasFaltantes):
        data_evento = datetime.strptime(f"{self.DATA}/2024", '%d/%m/%Y')
        data_postagem = data_evento - timedelta(days=int(diasFaltantes))
        return (self
                .comDivisorInicio()
                .comTituloOrganizacao(f'Faltam {diasFaltantes} dias')
                .comTexto(f"Data da postagem: {data_postagem.strftime('%d/%m/%Y')}")
                .comDivisorIntermediario()
                .comTexto(f"‚è≥ Faltam {str(diasFaltantes).zfill(2)} dias para o {self.EVENTO} ")
                .comTexto(f"O {self.EVENTO} est√° chegando e ainda d√° tempo de garantir o seu ingresso.")
                .comInscricaoELocal()
                .comFinalizacao()
                )

    def deEHoje(self):
        data_postagem = datetime.strptime(f"{self.DATA}/2024", '%d/%m/%Y')
        return (self
                .comDivisorInicio()
                .comTituloOrganizacao(f'√â hoje!')
                .comTexto(f"Data da postagem: {data_postagem.strftime('%d/%m/%Y')}")
                .comDivisorIntermediario()
                .comTexto(f"üéâ O {self.EVENTO} √© hoje! ")
                .comTexto(f"Esperamos todo mundo logo mais no {self.LOCAL} √†s {self.HORA}.")
                .comFinalizacao()
                )
    
    def deEAmanha(self):
        data_evento = datetime.strptime(f"{self.DATA}/2024", '%d/%m/%Y')
        data_postagem = data_evento - timedelta(days=int(1))
        return (self
                .comDivisorInicio()
                .comTituloOrganizacao(f'√â amanh√£')
                .comTexto(f"Data da postagem: {data_postagem.strftime('%d/%m/%Y')}")
                .comDivisorIntermediario()
                .comTexto(f"üéâ √â amanh√£! ")
                .comTexto(f"O {self.EVENTO} est√° chegando! Amanh√£, dia {self.DATA}, te esperamos no {self.LOCAL} √†s {self.HORA}.")
                .comFinalizacao()
                )

    def dePatrocinador(self, patrocinador):
        return (self
                .comCabecalhoOrganizacao(f'Patrocinador {patrocinador.strip()}')
                .comTexto(f"ü§ù O {patrocinador.strip()} √© um patrocinador oficial do {self.EVENTO}!")
                .comTexto(f"Agradecemos demais por possibilitar que o {self.EVENTO} seja poss√≠vel!")
                .comFinalizacao()
                )
    
    def deApoiador(self, apoiador):
        return (self
                .comCabecalhoOrganizacao(f'Apoiador {apoiador.strip()}')
                .comTexto(f"ü§ù O {apoiador.strip()} √© um apoiador oficial do {self.EVENTO}!")
                .comTexto(f"Agradecemos demais por possibilitar que o {self.EVENTO} seja poss√≠vel!")
                .comFinalizacao()
                )

    def dePalestrante(self, nome, titulo, resumo, mini_bio):
        return (self
                .comCabecalhoOrganizacao(f'Palestrante {nome}')
                .comTexto(f"üì£ Palestra Confirmada {self.EVENTO}!")
                .comTexto(f"‚≠ê {titulo}")
                .comTexto(f"üé§ {nome}")
                .comTexto("üìò Descri√ß√£o da palestra:")
                .comTexto(resumo)
                .comTexto("üìò Bio do palestrante:")
                .comTexto(mini_bio)
                .comInscricaoELocal()
                .comFinalizacao()
                )

    def deHorasComplementares(self):
        return (self
                .comCabecalhoOrganizacao('Horas complementares')
                .comTexto("üì£ Precisando de horas complementares para a faculdade?")
                .comTexto(f"O {self.EVENTO} ter√° certificado de participa√ß√£o com a carga hor√°ria correspondente ao evento. Se voc√™ est√° precisando de horas complementares, n√£o perca essa oportunidade!")
                .comTexto(f"Te esperamos no {self.EVENTO}!")
                .comInscricaoELocal()
                .comFinalizacao()
                )

    def deComoChegar(self):
        return (self
                .comCabecalhoOrganizacao('Como Chegar')
                .comTexto(f"‚è≥ O {self.EVENTO} est√° chegando!")
                .comTexto(f"O {self.EVENTO} acontecer√° dia {self.DATA} no {self.LOCAL}. ")
                .comTexto(f"O credenciamento come√ßa √†s {self.HORA} e recomendamos que voc√™ se planeje para chegar ao local do evento com anteced√™ncia para evitar transtornos.")
                .comTexto("Tem alguma d√∫vida de como chegar ao local do evento? D√° uma olhadinha no nosso guia!")
                .comFinalizacao()
                )
    
    def deGuiaPreparacao(self):
        return (self
                .comCabecalhoOrganizacao('Guia de Prepara√ß√£o')
                .comTexto(f"‚è≥ O {self.EVENTO} est√° chegando!")
                .comTexto("N√£o esquece de conferir o nosso guia de prepara√ß√£o com algumas informa√ß√µes importantes!")
                .comFinalizacao()
                )

    def deProgramacao(self):
        return (self
                .comCabecalhoOrganizacao('Programa√ß√£o')
                .comTexto(f"üïñ Olha a programa√ß√£o do {self.EVENTO} na sua timeline!")
                .comTexto(f"O {self.EVENTO} est√° chegando e a programa√ß√£o j√° est√° dispon√≠vel! Confira as palestras incr√≠veis que v√£o rolar nesse evento.")
                .comInscricaoELocal()
                .comFinalizacao()
                )
        
    def deIngressosEsgotados(self):
        return self.comCabecalhoOrganizacao('Ingressos Esgotados')
        .comTexto(f"üö® Os ingressos para o {self.EVENTO} est√£o esgotados! üö®")
        .comTexto(f"Agradecemos imensamente a todos que garantiram sua presen√ßa. Estamos animados para compartilhar momentos incr√≠veis com voc√™s no dia {self.DATA}.")
        .comTexto(f"Nos vemos no {self.EVENTO}!")
        .comHashtags()
        .comFinalizacao()

    def deNaoEsquecaCopo(self):
        return (self
                .comCabecalhoOrganizacao('N√£o esque√ßa seu copo')
                .comTexto("üå± Traga seu copo para o ${self.EVENTO}! üíö")
                .comTexto("Pedimos que todos tragam seus copos reutiliz√°veis, pois n√£o teremos copos descart√°veis no evento.")
                .comTexto("Assim, ajudamos a reduzir o uso de pl√°stico e deixamos nosso evento ainda mais sustent√°vel.")
                .comTexto("E quem trouxer o seu copo ainda vai ganhar um brinde especial.")
                .comTexto("Contamos com voc√™s!")
                .comInscricaoELocal()
                .comFinalizacao()
                
    def deNaoEsquecaAlimento(self):
        return (self
                .comCabecalhoOrganizacao('N√£o esque√ßa seu alimento')
                .comTexto("üçΩÔ∏è Se voc√™ optou pelo ingresso + alimento, n√£o esque√ßa de levar 1kg de alimento n√£o perec√≠vel para o evento üçΩÔ∏è")
                .comTexto("Lembramos que a entrada de quem comprou este tipo de ingresso s√≥ ser√° permitida para aqueles que apresentarem o alimento na entrada. Contamos com a sua colabora√ß√£o!")
                .comInscricaoELocal()
                .comFinalizacao()
                )
    
    def deSaveTheDate(self):
        return (self
                .comCabecalhoOrganizacao('Save the Date')
                .comTexto(f"üìÖ Anote na agenda!")
                .comTexto(f"No dia {self.DATA} acontecer√° o {self.EVENTO}.")
                .comTexto(f"Fique de olho nas nossas redes para mais informa√ß√µes.")
                .comFinalizacao()
                )
    

    def deC4p(self):
        return (self
                .comCabecalhoOrganizacao('Call for Papers')
                .comTexto("üé§ Que tal compartilhar seus conhecimentos sobre tecnologia com a comunidade?")
                .comTexto("O call for papers para o {self.EVENTO} que acontecer√° dia {self.DATA} em Pelotas est√° aberto, e essa √© a sua oportunidade de compartilhar seus conhecimentos sobre tecnologia com a comunidade. N√£o deixe de subtemer a sua palestra, e qualquer d√∫vida, manda uma mensagem pra gente!")
                .comInscricaoELocal()
                .comFinalizacao()
                )

    def de1loteComCamiseta(self):
        return (self
                .comCabecalhoOrganizacao('Ingressos Abertos')
                .comTexto("üé´ Os ingressos para o {self.EVENTO} est√£o abertos!")
                .comTexto("E nesse evento, al√©m de ter o melhor pre√ßo, os ingressos do primeiro lote tem uma novidade: agora voc√™ pode optar por um ingresso que inclui uma camiseta oficial do evento al√©m do ingresso comum.")
                .comTexto("Garanta logo o seu ingresso e a sua camiseta!")
                .comInscricaoELocal()
                .comFinalizacao()
                )

    def deTragaSeuLixo(self):
        return (self
                .comCabecalhoOrganizacao('Ponto de Coleta de Lixo Tecnol√≥gico')
                .comTexto("üóëÔ∏è Ponto de Coleta de Lixo Tecnol√≥gico no DevFest Rio Grande do Sul 2024!")
                .comTexto("Voc√™ tem algum eletr√¥nico que n√£o usa mais? Que tal traz√™-lo para descarte no ponto de coleta do Pelotas Parque Tecnol√≥gico? Voc√™ ajuda a o meio ambiente a ainda libera um espacinho a mais na sua casa!")
                .comInscricaoELocal()
                .comFinalizacao()
                )

